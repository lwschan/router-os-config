/interface bridge
add admin-mac=08:55:31:D5:A1:87 auto-mac=no comment=defconf name=bridge
/interface pppoe-client
add add-default-route=yes disabled=no interface=ether1 max-mtu=1492 name=\
    pppoe-out1 password= user=
/interface wireless
set [ find default-name=wlan1 ] band=2ghz-b/g/n channel-width=20/40mhz-XX \
    distance=indoors frequency=auto installation=indoor mode=ap-bridge ssid=\
    MikroTik-D5A18B wireless-protocol=802.11
set [ find default-name=wlan2 ] band=5ghz-a/n/ac channel-width=\
    20/40/80mhz-XXXX distance=indoors frequency=auto installation=indoor \
    mode=ap-bridge ssid=MikroTik-D5A18C wireless-protocol=802.11
/interface list
add comment=defconf name=WAN
add comment=defconf name=LAN
/interface wireless security-profiles
set [ find default=yes ] supplicant-identity=MikroTik
/ip pool
add name=dhcp ranges=10.0.0.100-10.0.0.254
/ip dhcp-server
add address-pool=dhcp disabled=no interface=bridge lease-time=12h name=\
    defconf
/interface bridge port
add bridge=bridge comment=defconf interface=ether2
add bridge=bridge comment=defconf interface=ether3
add bridge=bridge comment=defconf interface=ether4
add bridge=bridge comment=defconf interface=ether5
add bridge=bridge comment=defconf interface=wlan1
add bridge=bridge comment=defconf interface=wlan2
/ip neighbor discovery-settings
set discover-interface-list=LAN
/interface list member
add comment=defconf interface=bridge list=LAN
add comment=defconf interface=ether1 list=WAN
add interface=pppoe-out1 list=WAN
/ip address
add address=10.0.0.1/24 comment=defconf interface=bridge network=10.0.0.0
/ip cloud
set ddns-enabled=yes
/ip dhcp-client
add comment=defconf interface=ether1
/ip dhcp-server lease
add address=10.0.0.2 client-id=1:e8:48:b8:42:8f:0 mac-address=\
    E8:48:B8:42:8F:00 server=defconf
add address=10.0.0.99 client-id=1:4:d9:f5:4:8e:26 mac-address=\
    04:D9:F5:04:8E:26 server=defconf
/ip dhcp-server network
add address=10.0.0.0/24 comment=defconf gateway=10.0.0.1 netmask=24
/ip dns
set allow-remote-requests=yes use-doh-server=https://dns.google/dns-query \
    verify-doh-cert=yes
/ip dns static
add address=8.8.8.8 name=dns.google ttl=1h
add address=8.8.4.4 name=dns.google ttl=1h
add address=2001:4860:4860::8888 name=dns.google ttl=1h type=AAAA
add address=2001:4860:4860::8844 name=dns.google ttl=1h type=AAAA
/ip firewall filter
add action=accept chain=input comment=\
    "defconf: accept established,related,untracked" connection-state=\
    established,related,untracked
add action=drop chain=input comment="defconf: drop invalid" connection-state=\
    invalid
add action=accept chain=input comment="defconf: accept ICMP" protocol=icmp
add action=accept chain=input comment=\
    "defconf: accept to local loopback (for CAPsMAN)" dst-address=127.0.0.1
add action=drop chain=input comment="defconf: drop all not coming from LAN" \
    in-interface-list=!LAN
add action=accept chain=forward comment="defconf: accept in ipsec policy" \
    ipsec-policy=in,ipsec
add action=accept chain=forward comment="defconf: accept out ipsec policy" \
    ipsec-policy=out,ipsec
add action=fasttrack-connection chain=forward comment="defconf: fasttrack" \
    connection-state=established,related
add action=accept chain=forward comment=\
    "defconf: accept established,related, untracked" connection-state=\
    established,related,untracked
add action=drop chain=forward comment="defconf: drop invalid" \
    connection-state=invalid
add action=drop chain=forward comment=\
    "defconf: drop all from WAN not DSTNATed" connection-nat-state=!dstnat \
    connection-state=new in-interface-list=WAN
/ip firewall mangle
add action=change-mss chain=forward new-mss=clamp-to-pmtu passthrough=yes \
    protocol=tcp tcp-flags=syn
/ip firewall nat
add action=masquerade chain=srcnat comment="defconf: masquerade" \
    ipsec-policy=out,none out-interface-list=WAN
add action=redirect chain=dstnat comment=\
    "Transparent proxy all DNS queries from your LAN" dst-port=53 \
    in-interface-list=LAN protocol=udp
/ip service
set telnet disabled=yes
set ftp disabled=yes
set ssh disabled=yes port=2250
set api disabled=yes
set api-ssl disabled=yes
/ip ssh
set strong-crypto=yes
/ipv6 address
add from-pool=isp interface=bridge
/ipv6 dhcp-client
add add-default-route=yes interface=pppoe-out1 pool-name=isp request=\
    address,prefix use-peer-dns=no
/ipv6 firewall address-list
add address=::/128 comment="defconf: unspecified address" list=bad_ipv6
add address=::1/128 comment="defconf: lo" list=bad_ipv6
add address=fec0::/10 comment="defconf: site-local" list=bad_ipv6
add address=::ffff:0.0.0.0/96 comment="defconf: ipv4-mapped" list=bad_ipv6
add address=::/96 comment="defconf: ipv4 compat" list=bad_ipv6
add address=100::/64 comment="defconf: discard only " list=bad_ipv6
add address=2001:db8::/32 comment="defconf: documentation" list=bad_ipv6
add address=2001:10::/28 comment="defconf: ORCHID" list=bad_ipv6
add address=3ffe::/16 comment="defconf: 6bone" list=bad_ipv6
add address=::224.0.0.0/100 comment="defconf: other" list=bad_ipv6
add address=::127.0.0.0/104 comment="defconf: other" list=bad_ipv6
add address=::/104 comment="defconf: other" list=bad_ipv6
add address=::255.0.0.0/104 comment="defconf: other" list=bad_ipv6
/ipv6 firewall filter
add action=accept chain=input comment=\
    "defconf: accept established,related,untracked" connection-state=\
    established,related,untracked
add action=drop chain=input comment="defconf: drop invalid" connection-state=\
    invalid
add action=accept chain=input comment="defconf: accept ICMPv6" protocol=\
    icmpv6
add action=accept chain=input comment="defconf: accept UDP traceroute" port=\
    33434-33534 protocol=udp
add action=accept chain=input comment=\
    "defconf: accept DHCPv6-Client prefix delegation." dst-port=546 protocol=\
    udp src-address=fe80::/10
add action=accept chain=input comment="defconf: accept IKE" dst-port=500,4500 \
    protocol=udp
add action=accept chain=input comment="defconf: accept ipsec AH" protocol=\
    ipsec-ah
add action=accept chain=input comment="defconf: accept ipsec ESP" protocol=\
    ipsec-esp
add action=accept chain=input comment=\
    "defconf: accept all that matches ipsec policy" ipsec-policy=in,ipsec
add action=drop chain=input comment=\
    "defconf: drop everything else not coming from LAN" in-interface-list=\
    !LAN
add action=accept chain=forward comment=\
    "defconf: accept established,related,untracked" connection-state=\
    established,related,untracked
add action=drop chain=forward comment="defconf: drop invalid" \
    connection-state=invalid
add action=drop chain=forward comment=\
    "defconf: drop packets with bad src ipv6" src-address-list=bad_ipv6
add action=drop chain=forward comment=\
    "defconf: drop packets with bad dst ipv6" dst-address-list=bad_ipv6
add action=drop chain=forward comment="defconf: rfc4890 drop hop-limit=1" \
    hop-limit=equal:1 protocol=icmpv6
add action=accept chain=forward comment="defconf: accept ICMPv6" protocol=\
    icmpv6
add action=accept chain=forward comment="defconf: accept HIP" protocol=139
add action=accept chain=forward comment="defconf: accept IKE" dst-port=\
    500,4500 protocol=udp
add action=accept chain=forward comment="defconf: accept ipsec AH" protocol=\
    ipsec-ah
add action=accept chain=forward comment="defconf: accept ipsec ESP" protocol=\
    ipsec-esp
add action=accept chain=forward comment=\
    "defconf: accept all that matches ipsec policy" ipsec-policy=in,ipsec
add action=drop chain=forward comment=\
    "defconf: drop everything else not coming from LAN" in-interface-list=\
    !LAN
/ipv6 nd
set [ find default=yes ] mtu=1480
/system clock
set time-zone-name=Asia/Kuala_Lumpur
/system ntp client
set enabled=yes primary-ntp=162.159.200.1 secondary-ntp=162.159.200.123
/system script
add dont-require-permissions=no name="Setup Google DNS DoH" owner=lewis \
    policy=ftp,reboot,read,write,policy,test,password,sniff,sensitive,romon \
    source="## Google DNS-over-HTTPS DoH script\
    \n## Apply this script on your default configuration LAB router first\
    \n## RouterOS 6.47++\
    \n## Credits Nikita Tarikin <nikita@tarikin.com>\
    \n## 03.06.2020\
    \n\
    \n# Check for valid installed certificate\
    \n:do {\
    \n    :do {/tool fetch https://pki.goog/gsr2/GSR2.crt check-certificate=no\
    } \\\
    \n        while=([/file print count-only where name=\"GSR2.crt\"]=0);\
    \n    :do {/certificate import file-name=\"GSR2.crt\" passphrase=\"\" name\
    =\"GlobalSignRootCAR2.crt\"} \\\
    \n        while=([/certificate print count-only where name=\"GlobalSignRoo\
    tCAR2.crt\"]=0);\
    \n    :do {\
    \n        # Set static DNS records for dns.google name\
    \n        /ip dns static add type=A address=8.8.8.8 name=dns.google ttl=1h\
    \n        /ip dns static add type=A address=8.8.4.4 name=dns.google ttl=1h\
    \n        /ip dns static add type=AAAA address=2001:4860:4860::8888 name=d\
    ns.google ttl=1h\
    \n        /ip dns static add type=AAAA address=2001:4860:4860::8844 name=d\
    ns.google ttl=1h\
    \n\
    \n        # Change DNS servers\
    \n        /ip dns set servers=\
    \n        /ip dns set use-doh-server=\"https://dns.google/dns-query\" veri\
    fy-doh-cert=yes\
    \n\
    \n        # Transparent proxy all DNS queries from your LAN through your r\
    outer towards DoH servers / put this rule on top\
    \n        :do {/ip firewall nat add chain=dstnat protocol=udp dst-port=53 \
    in-interface-list=LAN action=redirect comment=\"Transparent proxy all DNS \
    queries from your LAN\"} \\\
    \n            if=([/ip dns get allow-remote-requests]=yes)\
    \n    } while=([/certificate print count-only where fingerprint=\"ca42dd41\
    745fd0b81eb902362cf9d8bf719da1bd1b1efc946f5b4c99f42c1b9e\"]=0);\
    \n} if=([/certificate print count-only where name=\"GlobalSignRootCAR2.crt\
    \"]=0);"
/tool mac-server
set allowed-interface-list=LAN
/tool mac-server mac-winbox
set allowed-interface-list=LAN
